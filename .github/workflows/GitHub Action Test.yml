name: Web App CI

on:
  push:
    branches: [develop, main, develop-did, production]
  pull_request:
    branches: [develop, develop-did]
  merge_group:
    types: [checks_requested]

jobs:
  build:
    if: ${{(github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/develop-did') }}

    # runs-on: ubuntu-latest -- only on ubuntu
    # - matrix.os: Specifies the operating systems to use. The matrix will
    #   run the job on each OS (ubuntu-latest, windows-latest, and macos-latest).
    # - runs-on: Dynamically uses the value from matrix.os to run on the specified platform.
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          token: ${{secrets.GH_PAT}}

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20.10.0" # Your Node.js version

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Build Next.js project
        run: npm run build
        env:
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }} # API in Netlify || produciton mode
          NEXT_PUBLIC_GO_API_URL: ${{ secrets.NEXT_PUBLIC_GO_API_URL }} # API in development mode
        continue-on-error: true

  notify:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Send Discord notification
        run: |
          STATUS="success"
          if [ "${{ needs.build.result }}" == "failure" ]; then
            STATUS="failure"
          fi

          MESSAGE=$(cat <<EOF
          {
            "username": "GitHub Actions",
            "embeds": [{
              "title": "Build $STATUS",
              "description": "Workflow: **${{ github.workflow }}**\\nActor: **${{ github.actor }}**\\nGithub-Commit-Head: **${{ github.sha }}**\\nBranch: **${{ github.ref_name }}**\\nRepository: **${{ github.repository }}**\\nCommit-msg: **${{ github.event.head_commit.message }}**\\nStatus: **$STATUS**\\n[View Logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})",
              "color": $(if [ "$STATUS" == "success" ]; then echo "3066993"; else echo "15158332"; fi)
            }]
          }
          EOF
          )

          curl -X POST \
            -H "Content-Type: application/json" \
            -d "$MESSAGE" \
            ${{ secrets.DISCORD_WEBHOOK_URL }}

  # rollback:
  #   if: ${{ failure() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/develop-did')}}
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Checkout code with full history
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0 # Ensures we have full history for rollback
  #         token: ${{secrets.GH_PAT}}

  #     # - name: Pull latest changes from remote # ensures that the local branch is up-to-date with the remote branch
  #     #   run: git pull origin ${{ github.ref }}

  #     - name: Rollback last commit
  #       run: |
  #         git reset --soft HEAD~1
  #         git push --force
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GH_PAT }}

  #     - name: Notify rollback
  #       run: echo "Build failed. Rolled back to previous commit."

  # deploy:
  #   if: github.ref == 'refs/heads/main'
  #   runs-on: ubuntu-latest
  #   needs: build  # Ensure deploy only runs if build succeeds

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #       with:
  #         token: ${{secrets.GH_PAT}}

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: '20.10.0'

  #     - name: Install dependencies
  #       run: npm install

  #     - name: Build Next.js project
  #       run: npm run build

  #     - name: Install Netlify CLI
  #       run: npm install -g netlify-cli

  #     - name: Initializing deployment
  #       run: echo "Initializing deployment to Netlify..."

  # - name: Link to Netlify site
  #   run: |
  #     netlify link --site ${{ secrets.NETLIFY_SITE_ID }}
  #   env:
  #     NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

  # - name: Deploy to Netlify
  #   run: |
  #         netlify deploy --prod \
  #         --dir=.next \
  #         --functions=netlify/functions \
  #         --site ${{ secrets.NETLIFY_SITE_ID }}
  #   env:
  #     NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
  #     NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  # - name: Post-processing after deployment
  #   run: echo "Deployment complete. Running post-processing steps..."

  # # final status
  # - name: Deployment complete
  #   run: echo "Deployment to Netlify is finished!"
